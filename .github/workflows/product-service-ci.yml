name: Product Service CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install Dependencies
      - name: Install dependencies
        run: |
          cd ecommerce-app/product-service
          npm install

      # Step 4: Run Tests
      - name: Run tests
        id: npm-test
        run: |
          cd ecommerce-app/product-service
          npm test

      # Step 5: Rollback (if tests fail)
      - name: Rollback (if tests fail)
        if: failure() && steps.npm-test.outcome == 'failure' 
        run: |
          echo "Tests failed. Reverting to the previous commit..."
          git config --global user.email "hathaull@sfu.ca"
          git config --global user.name "hathaull"
          git stash save "Stashing changes before reset"
          git fetch --unshallow
          git reset --hard HEAD~1
          git push origin main --force 

      # Step 6: Build Docker Image
      - name: Build Docker image
        if: success()
        run: |
          cd ecommerce-app/product-service
          docker build -t ala264/product-service:${{ github.sha }} .
          docker tag ala264/product-service:${{ github.sha }} ala264/product-service:latest

      # Step 7: Log in to Docker Hub
      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 8: Push Docker Image
      - name: Push Docker image
        if: success()
        run: |
          docker push ala264/product-service:${{ github.sha }}
          docker push ala264/product-service:latest

      # Step 9: Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        if: success()
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Step 10: Set up gcloud and kubectl
      - name: Set up kubectl
        if: success()
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ecommerce-cluster
          credentials_json: ${{ secrets.GCP_SA_KEY }} 
          export_default_credentials: true

      # Step 11: Connect to GKE Cluster
      # added admin 
      - name: Connect to GKE Cluster
        if: success()
        run: |
          gcloud container clusters get-credentials ecommerce-cluster --region us-central1 --project cicd-pipeline-442500

      # Step 12: Update Kubernetes Deployment
      - name: Update Kubernetes Deployment
        if: success()
        run: |
          kubectl set image deployment/product-service-deployment product-service=ala264/product-service:${{ github.sha }} --namespace=product-service
          kubectl rollout status deployment/product-service-deployment --namespace=product-service
