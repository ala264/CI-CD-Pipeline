name: User Service CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd ecommerce-app/user-service
          npm install

      - name: Run tests
        id: npm-test
        run: |
          cd ecommerce-app/user-service
          npm test
      
      - name: Rollback (if tests fail)
        if: failure() && steps.npm-test.outcome == 'failure' 
        run: |
          echo "Tests failed. Reverting to the previous commit..."
          git config --global user.email "hathaull@sfu.ca"
          git config --global user.name "hathaull"
          git stash save "Stashing changes before reset"
          git fetch --unshallow
          git reset --hard HEAD~1
          git push origin main --force 

      - name: Build Docker image
        if: success()
        run: |
          cd ecommerce-app/user-service
          docker build -t ala264/user-service:${{github.sha}} .
          docker tag ala264/user-service:${{ github.sha }} ala264/user-service:latest

        
      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        if: success()
        run: |
          docker push ala264/user-service:${{ github.sha }}
          docker push ala264/user-service:latest

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'


      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
      
      - name: Configure kubectl with gcloud
        run: |
          gcloud container clusters get-credentials ecommerce-cluster --region us-central1 --project cicd-pipeline-442500

  
    
          



      - name: Set up kubectl
        if: success()
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: cicd-pipeline-442500
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true


      - name: Connect to GKE Cluster
        if: success()
        run: |
          gcloud container clusters get-credentials ecommerce-cluster --region us-central1 --project cicd-pipeline-442500

      - name: Update Kubernetes Deployment
        if: success()
        run: |
          kubectl set image deployment/user-service-deployment user-service=ala264/user-service:${{ github.sha }} --namespace=user-service
          kubectl rollout status deployment/user-service-deployment --namespace=user-service
